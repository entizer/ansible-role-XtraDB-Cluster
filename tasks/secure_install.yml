---
- name: EL specific mysql initial password collection and config
  when:
    - (ansible_os_family == "RedHat")
  block:
    - name: EL8 | Get temporary root password
      ansible.builtin.shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}' | tail -n 1
      register: "_xtradb_root_temp_password"
      when:
        - not _xtradb_password_changed.stat.exists

    - name: Percona | Change Percona Root Pass
      ansible.builtin.shell: "echo \"ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ xtradb_root_password }}'; FLUSH PRIVILEGES;\" | mysql -u root --password='{{ _xtradb_root_temp_password.stdout }}' --connect-expired-password"
      when:
        - not _xtradb_password_changed.stat.exists

    - name: Marking as password is changed
      ansible.builtin.file:
        path: "{{ xtradb_password_changed }}"
        state: "touch"
        owner: root
        group: root
        mode: '0400'

    - name: Include replication config file
      ansible.builtin.lineinfile:
        path: "/etc/my.cnf"
        line: "!include /etc/mysql/wsrep.cnf"

- name: Delete anonymous connections
  community.mysql.mysql_user:
    login_user: "{{ xtradb_root_user }}"
    login_password: "{{ xtradb_root_password }}"
    name: ""
    host_all: true
    state: absent

- name: "Secure the MySQL root user for localhost"
  community.mysql.mysql_user:
    login_user: "{{ xtradb_root_user }}"
    login_password: "{{ xtradb_root_password }}"
    password: "{{ xtradb_root_password }}"
    name: "{{ xtradb_root_user }}"
    host: "{{ item }}"
  with_items:
    - "::1"
    - "127.0.0.1"
    - "localhost"
    - "{{ ansible_default_ipv4.address }}"

- name: Remove the MySQL test database
  community.mysql.mysql_db:
    db: test
    login_user: "{{ xtradb_root_user }}"
    login_password: "{{ xtradb_root_password }}"
    login_host: "localhost"
    state: absent

- name: Marking as secured
  ansible.builtin.file:
    path: "{{ xtradb_secured }}"
    state: "touch"
    owner: root
    group: root
    mode: '0400'

...
